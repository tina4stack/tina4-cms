<div id="contentEditor" class="form-control" style="height:300px">{{ data.content | raw }}</div>
<script>
    function saveContent(editor) {
        $('#saveContent').val(editor.getContent());
    }

    tinyMCE.execCommand('mceRemoveEditor', false, 'contentEditor');

    tinymce.init({
        selector: '#contentEditor',
        plugins: 'preview importcss searchreplace autolink autosave save directionality code visualblocks visualchars fullscreen image link media template codesample table charmap pagebreak nonbreaking anchor insertdatetime advlist lists wordcount help charmap quickbars emoticons',
        //toolbar: 'undo redo | bold italic underline strikethrough | fontfamily fontsize blocks | alignleft aligncenter alignright alignjustify | outdent indent |  numlist bullist | forecolor backcolor removeformat | pagebreak | charmap emoticons | fullscreen  preview save print | insertfile image media template link anchor codesample | ltr rtl',
        toolbar_sticky: true,
        toolbar: 'undo redo fontsize bold italic forecolor backcolor styles alignleft aligncenter alignright alignjustify numlist bullist outdent indent image media emoticons menuSnippets menuArticles | fullscreen ',
        images_upload_url: '/cms/upload?formToken={{ formToken | raw }}',
        images_upload_base_path: '/uploads/',
        images_upload_credentials: true,
        forced_root_block: 'p',
        visualblocks_default_state: true,
        convert_urls: false,
        height: 500,
        extended_valid_elements:'div[*]',
        valid_children: '+div[div]',
        importcss_append: true,
        content_css: '/src/public/css/default.css',
        style_formats_merge: true,
        style_formats_autohide: true,
        file_picker_callback:   function(callback, url, type, win) {
            myWindow = popupCenter({url: "/cms/file-browser?formToken={{ formToken | raw }}", title: 'Tina4CMS - File Browser', w: 900, h: 500});
            myWindow.tinymceCallback = callback;
        },
        setup:function(editor) {
            editor.on('change', function(e) {
                saveContent(editor)
            });
            console.log('Adding snippets ');
            editor.ui.registry.addMenuButton('menuSnippets', {
                text: 'Snippets',
                fetch: function (callback) {
                    var items = [
                        {% for snippet in snippets %}
                        {
                            type: 'menuitem',
                            text: '{{ snippet.name }}',
                            onAction: function (_) {
                                editor.insertContent('\n\{\{ include( getSnippet("{{ snippet.name }}") ) \}\}');
                            }
                        },
                        {% endfor %}
                    ];
                    callback(items);
                }
            });
            console.log('Adding articles ');
            editor.ui.registry.addMenuButton('menuArticles', {
                text: 'Articles',
                fetch: function (callback) {
                    var itemsA = [
                        {% for articleCategory in articleCategories %}
                        {
                            type: 'menuitem',
                            text: '{{ articleCategory.name }}',
                            onAction: function (_) {
                                editor.insertContent("\{\% set articles = Content.getArticles (\"{{ articleCategory.name }}\", 8) \%\}\n\{\% for article in articles \%\}\n\{\% include \"snippets/medium.twig\" with {\"article\": article} \%\}\n\{\% endfor \%\}\{\% set params = {\"tag\": \"all\", \"skip\": 0, \"limit\": 4, \"template\": \"medium.twig\"} \%\}\{\% include \"load-more.twig\" with params \%\}");
                            }
                        },
                        {% endfor %}
                    ];
                    callback(itemsA);
                }
            });
        }
    });

    $(document).on('focusin', function(e) {
        if ($(e.target).closest(".tox").length) {
            e.stopImmediatePropagation();
        }
    });
</script>
<textarea id="saveContent" class="form-control" style="display:none; height: 300px" name="content">{{ data.content | raw }}</textarea>